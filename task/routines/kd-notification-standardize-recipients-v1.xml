<tree schema_version="1.0">
    <sourceName>-</sourceName>
    <sourceGroup>-</sourceGroup>
    <definitionId>routine_kd_notifications_standardize_recipients_v1</definitionId>
    <type>Global Routine</type>
    <status>Active</status>
    <taskTree builder_version="" schema_version="1.0" version="">
        <name>KD Notification Standardize Recipients_v1</name>
        <author></author>
        <notes></notes>
        <lastID>26</lastID>
        <taskDefinition id="routine_kd_notifications_standardize_recipients_v1" name="KD Notification Standardize Recipients_v1" schema_version="1.0" version="1">
            <visible>false</visible>
            <deferrable>true</deferrable>
            <parameters>
                <parameter id="Recipient List" label="Recipient List" required="true" tooltip="Comma separated list of recipients (Usernames, SMTP Addresses, and/or Team Names)"></parameter>
                <parameter id="Space Slug" label="Space Slug" required="true" tooltip="Space slug where the users will reside"></parameter>
                <parameter id="Admin Kapp Slug" label="Admin Kapp Slug" required="true" tooltip="Slug identifier for Admin Kapp"></parameter>
            </parameters>
            <handler name="system_tree_call" version="1"></handler>
            <results format="xml">
                <result name="Recipients JSON" tooltip="Recipient JSON {&quot;recipients&quot;:[{&quot;type&quot;:&quot;user&quot;,&quot;username&quot;:&quot;test.user&quot;,&quot;smtpaddress&quot;:&quot;test.user@company.com&quot;,&quot;language&quot;:&quot;English&quot;,&quot;email notifications&quot;:&quot;on&quot;},{&quot;type&quot;:&quot;smtp&quot;,&quot;smtpaddress&quot;:&quot;sales@company.com&quot;}]}"></result>
            </results>
        </taskDefinition>
        <request>
            <task definition_id="system_start_v1" id="start" name="Start" x="10" y="10">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters></parameters>
                <messages></messages>
                <dependents>
                    <task label="" type="Complete" value="">utility_csv_to_xml_v1_2</task>
                </dependents>
            </task>
            <task definition_id="utilities_echo_v1" id="utilities_echo_v1_1" name="Is SMTP Address" x="715" y="99">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="input" label="Input" menu="" required="true" tooltip="">&lt;%=!(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i.match("#{@results['Recipient Loop Start']['Value']}").nil?)%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="Is SMTP address" type="Complete" value="@results['Is SMTP Address']['output'] === &quot;true&quot;">utilities_echo_v1_12</task>
                    <task label="Not SMTP" type="Complete" value="@results['Is SMTP Address']['output'] === &quot;false&quot;">system_noop_v1_7</task>
                </dependents>
            </task>
            <task definition_id="utility_csv_to_xml_v1" id="utility_csv_to_xml_v1_2" name="Recipients CSV to XML" x="66" y="100">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="csv" label="CSV" menu="" required="true" tooltip="">&lt;%=@inputs['Recipient List']%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">system_loop_head_v1_3</task>
                </dependents>
            </task>
            <task definition_id="system_loop_head_v1" id="system_loop_head_v1_3" name="Recipient Loop Start" x="197" y="99">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="data_source" label="Data Source:" menu="" required="true" tooltip="The source that contains the data to use to create each task in the loop.">&lt;%=@results['Recipients CSV to XML']['XML']%&gt;</parameter>
                    <parameter id="loop_path" label="Loop Path:" menu="" required="true" tooltip="The XPath statement to indicate what data records to process.">//list/item</parameter>
                    <parameter id="var_name" label="Variable Name:" menu="" required="false" tooltip="The local variable name used to represent the data used in loop tasks.">recipient</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">system_loop_tail_v1_4</task>
                    <task label="" type="Complete" value="">routine_kinetic_request_ce_user_retrieve_v1_26</task>
                </dependents>
            </task>
            <task definition_id="system_loop_tail_v1" id="system_loop_tail_v1_4" name="Recipient Loop End" x="199" y="561">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="type" label="Type:" menu="All,Some,Any" required="true" tooltip="How many loop processes must be completed before continuing?">All</parameter>
                    <parameter dependsOnId="type" dependsOnValue="Some" id="number" label="Number:" menu="" required="false" tooltip="If some, how many?"></parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">utilities_echo_v1_16</task>
                </dependents>
            </task>
            <task definition_id="system_noop_v1" id="system_noop_v1_7" name="Not user, not team, not SMTP. What here?" x="913" y="89">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters></parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
            <task definition_id="utilities_echo_v1" id="utilities_echo_v1_10" name="Format User JSON" x="352" y="343">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="input" label="Input" menu="" required="true" tooltip="">&lt;%=
            email_notifications = "yes"
            if @results['Look for User']['Profile Attributes']!="null"
              JSON.parse(@results['Look for User']['Profile Attributes']).each{|attribute|
                if attribute["name"].downcase==="email notifications"
                  if !attribute["values"][0].nil? &amp;&amp; attribute["values"][0].strip != "" &amp;&amp; (attribute["values"][0].strip.downcase=="yes" || attribute["values"][0].strip.downcase=="no")
                    email_notifications = attribute["values"][0].strip.downcase
                  end
                end
              }
            end
            
            language = "- Default -"
            if !@results['Look for User']['Preferred Locale'].nil? &amp;&amp; !@results['Look for User']['Preferred Locale'].empty?
              language = @results['Look for User']['Preferred Locale']
            end
            
            email = nil
            if !(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i.match("#{@results['Look for User']['Email']}").nil?)
              email = @results['Look for User']['Email']
            end
            
            format={}
            format["type"] = "user"
            format["username"] = @results['Look for User']['Username']
            format["smtpaddress"] = email
            format["language"] = language
            format["email notifications"] = email_notifications
            
            format.to_json
            %&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">system_junction_v1_22</task>
                </dependents>
            </task>
            <task definition_id="utilities_echo_v1" id="utilities_echo_v1_12" name="Format SMTP JSON" x="728" y="539">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="input" label="Input" menu="" required="true" tooltip="">{"type":"smtp","smtpaddress":"&lt;%=@results['Recipient Loop Start']['Value']%&gt;","language":"- Default -"}</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">system_junction_v1_22</task>
                </dependents>
            </task>
            <task definition_id="utilities_echo_v1" id="utilities_echo_v1_15" name="Format Team Users JSON" x="539" y="427">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="input" label="Input" menu="" required="true" tooltip="">&lt;%=
            user_details_json = JSON.parse(@results['Retrieve team member details']['User Details JSON'])
            user_details_format = []
            
            user_details_json.each{|user|
              email_notifications = "yes"
              if !user["profileAttributes"].nil? &amp;&amp; user["profileAttributes"] != "null"
                user["profileAttributes"].each{|attribute|
                  if attribute["name"].downcase=="email notifications"
                    if !attribute["values"][0].nil? &amp;&amp; attribute["values"][0].strip != "" &amp;&amp; (attribute["values"][0].strip.downcase=="yes" || attribute["values"][0].strip.downcase=="no")
                      email_notifications = attribute["values"][0].strip.downcase
                    end
                  end
                }
              end
            
              format={}
              format["type"] = "user"
              format["username"] = user["username"]
              format["smtpaddress"] = user["email"]
              format["language"] = user["preferredLocale"]
              format["email notifications"] = email_notifications
            
              user_details_format.push(format)
            }
            user_details_format.to_json
            %&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">system_junction_v1_22</task>
                </dependents>
            </task>
            <task definition_id="utilities_echo_v1" id="utilities_echo_v1_16" name="Collect results" x="198" y="682">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="input" label="Input" menu="" required="true" tooltip="">&lt;%=
            usernames=[]
            recipient_details=[]
            if @results.has_key? ('Format User JSON')
              @results['Format User JSON'].collect{|user|
                recipient_details.push(JSON.parse(user[1]['output']))
                usernames.push(JSON.parse(user[1]['output'])['username'])
              }
            end
            
            if @results.has_key? ('Format Team Users JSON')
              @results['Format Team Users JSON'].collect{|users|
                JSON.parse(users[1]['output']).each{|user|
                  # only add if user is not already in the list.
                  if !usernames.include?(user['username'])
                    recipient_details.push(user)
                    usernames.push(user['username'])
                  end
                }
              }
            end
            
            if @results.has_key? ('Format SMTP JSON')
              @results['Format SMTP JSON'].collect{|user|
                recipient_details.push(JSON.parse(user[1]['output']))
              }
            end
            recipient_details.to_json
            %&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">system_tree_return_v1_23</task>
                </dependents>
            </task>
            <task definition_id="kinetic_request_ce_user_retrieve_from_list_v1" id="kinetic_request_ce_user_retrieve_from_list_v1_18" name="Retrieve team member details" x="539" y="254">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="space_slug" label="Space Slug" menu="" required="false" tooltip="The Space the submission is being retrieved from.">&lt;%=@inputs['Space Slug']%&gt;</parameter>
                    <parameter id="usernames" label="Username List" menu="" required="true" tooltip="Comma separated list of usernames to retrieve.">&lt;%= 
# Parse Members returned from the Team Retrieve Handlers
members = JSON.parse(@results['Look for Team']['Membership JSON'])
# If members exist, put them into array of usernames
if members.length &gt; 0 
  members = members.map{ |item| item.values }.flatten
end
# convert the members array to a CSV
members.join(',') %&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">utilities_echo_v1_15</task>
                </dependents>
            </task>
            <task definition_id="system_junction_v1" id="system_junction_v1_22" name="Recipient Junction" x="363" y="560">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters></parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">system_loop_tail_v1_4</task>
                </dependents>
            </task>
            <task definition_id="system_tree_return_v1" id="system_tree_return_v1_23" name="Return" x="199" y="783">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Recipients JSON" label="Recipients JSON" menu="" required="false" tooltip="Recipient JSON {&quot;recipients&quot;:[{&quot;type&quot;:&quot;user&quot;,&quot;username&quot;:&quot;test.user&quot;,&quot;smtpaddress&quot;:&quot;test.user@company.com&quot;,&quot;language&quot;:&quot;English&quot;,&quot;email notifications&quot;:&quot;on&quot;},{&quot;type&quot;:&quot;smtp&quot;,&quot;smtpaddress&quot;:&quot;sales@company.com&quot;}]}">&lt;%=@results['Collect results']['output']%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
            <task definition_id="routine_kinetic_request_ce_team_retrieve_v1" id="routine_kinetic_request_ce_team_retrieve_v1_25" name="Look for Team" x="538" y="88">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Team Name" label="Team Name" menu="" required="true" tooltip="Name of the Team to Retrieve">&lt;%=@results['Recipient Loop Start']['Value']%&gt;</parameter>
                    <parameter id="Return Attributes" label="Return Attributes" menu="" required="false" tooltip="If the function needs to return the teams attributes">false</parameter>
                    <parameter id="Return Members" label="Return Members" menu="" required="false" tooltip="If the function needs to return the teams members">true</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="Not team" type="Complete" value="@results['Look for Team']['Exists'] == &quot;false&quot;">utilities_echo_v1_1</task>
                    <task label="Is team" type="Complete" value="@results['Look for Team']['Exists'] == &quot;true&quot;">kinetic_request_ce_user_retrieve_from_list_v1_18</task>
                </dependents>
            </task>
            <task definition_id="routine_kinetic_request_ce_user_retrieve_v1" id="routine_kinetic_request_ce_user_retrieve_v1_26" name="Look for User" x="352" y="97">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Space Slug" label="Space Slug" menu="" required="false" tooltip="Slug of the space in which the user exists"></parameter>
                    <parameter id="Username" label="Username" menu="" required="true" tooltip="Username of the user to retrieve">&lt;%=@results['Recipient Loop Start']['Value']%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="Is user" type="Complete" value="@results['Look for User']['Exists']==&quot;true&quot;">utilities_echo_v1_10</task>
                    <task label="Not a user" type="Complete" value="@results['Look for User']['Exists']==&quot;false&quot;">routine_kinetic_request_ce_team_retrieve_v1_25</task>
                </dependents>
            </task>
        </request>
    </taskTree>
</tree>